<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yi.hikari.dao.BaikeMapper">
  <resultMap id="BaseResultMap" type="com.yi.hikari.model.Baike">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="book" jdbcType="VARCHAR" property="book" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="good" jdbcType="INTEGER" property="good" />
    <result column="bad" jdbcType="INTEGER" property="bad" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="goldCoin" jdbcType="INTEGER" property="goldcoin" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="crateDate" jdbcType="TIMESTAMP" property="cratedate" />
    <result column="updateDate" jdbcType="TIMESTAMP" property="updatedate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book, tag, good, bad, name, gender, goldCoin, status, crateDate, updateDate
  </sql>
  <select id="selectByExample" parameterType="com.yi.hikari.model.BaikeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from baike
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from baike
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from baike
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yi.hikari.model.BaikeExample">
    delete from baike
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yi.hikari.model.Baike">
    insert into baike (id, book, tag, 
      good, bad, name, gender, 
      goldCoin, status, crateDate, 
      updateDate)
    values (#{id,jdbcType=BIGINT}, #{book,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, 
      #{good,jdbcType=INTEGER}, #{bad,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{goldcoin,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{cratedate,jdbcType=TIMESTAMP}, 
      #{updatedate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yi.hikari.model.Baike">
    insert into baike
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="book != null">
        book,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="good != null">
        good,
      </if>
      <if test="bad != null">
        bad,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="goldcoin != null">
        goldCoin,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="cratedate != null">
        crateDate,
      </if>
      <if test="updatedate != null">
        updateDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="book != null">
        #{book,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="good != null">
        #{good,jdbcType=INTEGER},
      </if>
      <if test="bad != null">
        #{bad,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="goldcoin != null">
        #{goldcoin,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="cratedate != null">
        #{cratedate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null">
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yi.hikari.model.BaikeExample" resultType="java.lang.Long">
    select count(*) from baike
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update baike
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.book != null">
        book = #{record.book,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.good != null">
        good = #{record.good,jdbcType=INTEGER},
      </if>
      <if test="record.bad != null">
        bad = #{record.bad,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.goldcoin != null">
        goldCoin = #{record.goldcoin,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.cratedate != null">
        crateDate = #{record.cratedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedate != null">
        updateDate = #{record.updatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update baike
    set id = #{record.id,jdbcType=BIGINT},
      book = #{record.book,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR},
      good = #{record.good,jdbcType=INTEGER},
      bad = #{record.bad,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      goldCoin = #{record.goldcoin,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      crateDate = #{record.cratedate,jdbcType=TIMESTAMP},
      updateDate = #{record.updatedate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yi.hikari.model.Baike">
    update baike
    <set>
      <if test="book != null">
        book = #{book,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="good != null">
        good = #{good,jdbcType=INTEGER},
      </if>
      <if test="bad != null">
        bad = #{bad,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="goldcoin != null">
        goldCoin = #{goldcoin,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="cratedate != null">
        crateDate = #{cratedate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null">
        updateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yi.hikari.model.Baike">
    update baike
    set book = #{book,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      good = #{good,jdbcType=INTEGER},
      bad = #{bad,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      goldCoin = #{goldcoin,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      crateDate = #{cratedate,jdbcType=TIMESTAMP},
      updateDate = #{updatedate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>